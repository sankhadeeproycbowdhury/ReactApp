{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","countWord","split","filter","item","length","Fragment","style","color","heading","rows","onChange","event","target","value","backgroundColor","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLocaleLowerCase","handlClear","defaultProps","Alert","alert","message","App","setMode","setAlert","msg","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5ad53ed9.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                Projects\n                            </a>\n                            <ul className=\"dropdown-menu\">\n                                <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\n                                <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\n                                <li><hr className=\"dropdown-divider\" /></li>\n                                <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\n                            </ul>\n                        </li>\n                    </ul>\n                    {/* <form className=\"d-flex\" role=\"search\"> */}\n                        {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button> */}\n                    {/* </form> */}\n                    <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string,\n    mode: PropTypes.string,\n    toggleMode : PropTypes.func\n};\n\nNavbar.defaultProps = {\n    title: 'StarEX',\n    aboutText: 'About org.'\n};\n\n\n\n","import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n  const [text, setText] = useState('Enter text here');\n\n  const handleUpClick = () => {\n    const newText = text.toUpperCase()\n    setText(newText)\n    props.showAlert(\"Converted to UpperCase!\", \"success\");\n  }\n\n  const handleOnchange = (event) => {\n    setText(event.target.value)\n  }\n\n  const handleLoClick = () => {\n    const newText = text.toLocaleLowerCase()\n    setText(newText)\n    props.showAlert(\"Converted to LowerCase!\", \"success\");\n  }\n\n  const handlClear = () => {\n    const newText = \"\"\n    setText(newText)\n  }\n\n  const countWord = (text)=>{\n    let textContainer = text.split(\" \").filter(item => item !=='');\n    return textContainer.length;\n  }\n\n  return (\n    <>\n      <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n        <h3>{props.heading}</h3>\n        <div className=\"mb-3\">\n          <textarea rows={15} className=\"form-control\" onChange={handleOnchange} id=\"myBox\" style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} value={text} />\n        </div>\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert UpperCase</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick} >Convert LowerCase</button>\n        <button className=\"btn btn-primary mx-2\" onClick={handlClear} >Clear Text</button>\n      </div>\n\n      <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n        <h3>Your Text Summery:</h3>\n        <p>{countWord(text)} Words, {text.length} Characters</p>\n        <p>{0.008 * countWord(text)} Minutes to Read</p>\n        <h3>Preview</h3>\n        <p>{text.length > 0?text:\"Enter Something to Preview here\"}</p>\n      </div>\n\n    </>\n  )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    return (\n    \n\n\n\n\nprops.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                {props.alert.message}\n             </div>\n        \n    )\n}\n\nexport default Alert\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"DarkMode is Enabled\", \"success\")\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"LightMode is Enabled\", \"success\")\n    }\n  }\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      message: msg,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n\n  return (\n    <>\n\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About />} />\n            <Route exact path=\"/\" element={<TextForm heading=\"Enter the Text to be analyzed\" showAlert={showAlert} mode={mode} />} />\n          </Routes> */}\n        <TextForm heading=\"Enter the Text to be analyzed\" showAlert={showAlert} mode={mode} />\n        </div>\n      {/* </Router> */}\n\n    </>\n\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}